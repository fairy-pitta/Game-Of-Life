// Rule definition
export type Rule = {
  name: string
  survive: number[]
  birth: number[]
  description: string
  longDescription: string
  examples?: string
}

export const RULES: Rule[] = [
  {
    name: "23/3",
    survive: [2, 3],
    birth: [3],
    description: "Standard Game of Life",
    longDescription:
      "The classic Conway's Game of Life rule. It creates a balance between stability and chaos, allowing for the emergence of complex patterns. This rule supports a wide variety of stable patterns (still lifes), oscillators, and spaceships (patterns that move across the grid).",
    examples:
      "Common patterns include: Gliders (small spaceships), Blinkers (oscillators that alternate between two states), and Blocks (stable 2x2 squares).",
  },
  {
    name: "23/36",
    survive: [2, 3],
    birth: [3, 6],
    description: "HighLife",
    longDescription:
      "A variant of Conway's Game of Life that adds one additional birth condition: cells are also born if they have exactly 6 neighbors. This small change creates new behaviors while maintaining many of the original rule's characteristics.",
    examples:
      "HighLife is known for supporting a pattern called the 'Replicator' which creates copies of itself as it evolves.",
  },
  {
    name: "16/6",
    survive: [1, 6],
    birth: [6],
    description: "Replicator rule",
    longDescription:
      "This rule creates patterns that tend to replicate themselves. Living cells survive with 1 or 6 neighbors, and dead cells become alive with exactly 6 neighbors. The unique survival condition with just 1 neighbor leads to interesting growth patterns.",
    examples:
      "Many initial patterns in this rule will grow and create copies of themselves, spreading across the grid in a self-replicating manner.",
  },
  {
    name: "12345/3",
    survive: [1, 2, 3, 4, 5],
    birth: [3],
    description: "Maze generator",
    longDescription:
      "This rule has very permissive survival conditions (cells survive with 1, 2, 3, 4, or 5 neighbors) but the same birth condition as the standard Game of Life. It tends to create maze-like patterns with winding corridors and enclosed spaces.",
    examples:
      "Random initial patterns often evolve into complex maze structures with thin walls. The mazes continuously evolve and change their structure over time.",
  },
  {
    name: "5678/35678",
    survive: [5, 6, 7, 8],
    birth: [3, 5, 6, 7, 8],
    description: "Coral growth",
    longDescription:
      "This rule has the opposite behavior of most Life-like rules. Cells survive and are born with many neighbors, creating dense, coral-like growth patterns. The rule favors overcrowding rather than avoiding it.",
    examples:
      "Patterns tend to grow into dense, organic-looking structures with intricate boundaries, resembling coral formations or bacterial colonies.",
  },
]

// Theme definition
export type Theme = {
  name: string
  cellColor: string
  bgColor: string
  hoverColor: string
  gridLineColor: string
}

export const THEMES: Theme[] = [
  {
    name: "Default",
    cellColor: "#1e293b",
    bgColor: "#ffffff",
    hoverColor: "#f1f5f9",
    gridLineColor: "#e2e8f0",
  },
  {
    name: "Purple",
    cellColor: "#7c3aed",
    bgColor: "#ffffff",
    hoverColor: "#f3e8ff",
    gridLineColor: "#e9d5ff",
  },
  {
    name: "Blue",
    cellColor: "#2563eb",
    bgColor: "#ffffff",
    hoverColor: "#dbeafe",
    gridLineColor: "#bfdbfe",
  },
  {
    name: "Green",
    cellColor: "#16a34a",
    bgColor: "#ffffff",
    hoverColor: "#dcfce7",
    gridLineColor: "#bbf7d0",
  },
  {
    name: "Red",
    cellColor: "#dc2626",
    bgColor: "#ffffff",
    hoverColor: "#fee2e2",
    gridLineColor: "#fecaca",
  },
  {
    name: "Pastel",
    cellColor: "#8b5cf6",
    bgColor: "#f5f3ff",
    hoverColor: "#ede9fe",
    gridLineColor: "#ddd6fe",
  },
  {
    name: "Candy",
    cellColor: "#ec4899",
    bgColor: "#fdf2f8",
    hoverColor: "#fce7f3",
    gridLineColor: "#fbcfe8",
  },
  {
    name: "Ocean",
    cellColor: "#0ea5e9",
    bgColor: "#f0f9ff",
    hoverColor: "#e0f2fe",
    gridLineColor: "#bae6fd",
  },
  {
    name: "Forest",
    cellColor: "#10b981",
    bgColor: "#ecfdf5",
    hoverColor: "#d1fae5",
    gridLineColor: "#a7f3d0",
  },
]

// Pattern definition
export type Pattern = {
  name: string
  description: string
  grid: boolean[][]
}

// Common patterns
export const PATTERNS: Pattern[] = [
  {
    name: "Glider",
    description: "A small spaceship that moves diagonally",
    grid: [
      [false, true, false],
      [false, false, true],
      [true, true, true],
    ],
  },
  {
    name: "Blinker",
    description: "A simple oscillator with period 2",
    grid: [
      [false, false, false],
      [true, true, true],
      [false, false, false],
    ],
  },
  {
    name: "Block",
    description: "A still life pattern",
    grid: [
      [true, true],
      [true, true],
    ],
  },
  {
    name: "Beehive",
    description: "A still life pattern",
    grid: [
      [false, true, true, false],
      [true, false, false, true],
      [false, true, true, false],
    ],
  },
  {
    name: "Loaf",
    description: "A still life pattern",
    grid: [
      [false, true, true, false],
      [true, false, false, true],
      [false, true, false, true],
      [false, false, true, false],
    ],
  },
  {
    name: "Toad",
    description: "An oscillator with period 2",
    grid: [
      [false, false, false, false],
      [false, true, true, true],
      [true, true, true, false],
      [false, false, false, false],
    ],
  },
  {
    name: "Gosper Glider Gun",
    description: "A pattern that periodically creates gliders",
    grid: [
      [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
      ],
      [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
      ],
      [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
      ],
      [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
      ],
      [
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
      ],
      [
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
      ],
      [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
      ],
      [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
      ],
      [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
      ],
    ],
  },
  {
    name: "Pulsar",
    description: "An oscillator with period 3",
    grid: [
      [false, false, false, false, false, false, false, false, false, false, false, false, false],
      [false, false, false, false, true, true, true, false, true, true, true, false, false],
      [false, false, false, false, false, false, false, false, false, false, false, false, false],
      [false, false, true, false, false, false, false, false, false, false, false, true, false],
      [false, false, true, false, false, false, false, false, false, false, false, true, false],
      [false, false, true, false, false, false, false, false, false, false, false, true, false],
      [false, false, false, false, false, false, false, false, false, false, false, false, false],
      [false, false, true, false, false, false, false, false, false, false, false, true, false],
      [false, false, true, false, false, false, false, false, false, false, false, true, false],
      [false, false, true, false, false, false, false, false, false, false, false, true, false],
      [false, false, false, false, false, false, false, false, false, false, false, false, false],
      [false, false, false, false, true, true, true, false, true, true, true, false, false],
      [false, false, false, false, false, false, false, false, false, false, false, false, false],
    ],
  },
  {
    name: "Spaceship",
    description: "A pattern that moves horizontally",
    grid: [
      [false, true, true, true, true],
      [true, false, false, false, true],
      [false, false, false, false, true],
      [true, false, false, true, false],
    ],
  },
  {
    name: "Random",
    description: "Random pattern with adjustable density",
    grid: [],
  },
]
